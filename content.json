{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"kafka安装","slug":"安装kafka","date":"2019-03-14T07:37:57.000Z","updated":"2019-03-14T08:34:42.743Z","comments":true,"path":"2019/03/14/安装kafka/","link":"","permalink":"http://yoursite.com/2019/03/14/安装kafka/","excerpt":"","text":"通过docker可以很方便的搭建kafka集群作为本地测试环境使用使用docker-compose进行搭建，包含zookpper服务、kafka broker、kafka-manager。 创建目录12345mkdir -p /opt/kafkamkdir -p /opt/kafka/kafka-logsmkdir -p /opt/kafka/zooDatacd /opt/kafkavi docker-compose.yml docker-compose.yml文件内容：12345678910111213141516171819202122232425262728version: &apos;2&apos;services: zookeeper: image: wurstmeister/zookeeper volumes: - ./zooData:/data ports: - &quot;2181:2181&quot; kafka: image: wurstmeister/kafka ports: - &quot;9092:9092&quot; environment: KAFKA_ADVERTISED_HOST_NAME: 10.5.74.18 KAFKA_MESSAGE_MAX_BYTES: 2000000 KAFKA_CREATE_TOPICS: &quot;Topic1:1:3,Topic2:1:1:compact&quot; KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 volumes: - ./kafka-logs:/kafka - /var/run/docker.sock:/var/run/docker.sock kafka-manager: image: sheepkiller/kafka-manager ports: - 9020:9000 environment: ZK_HOSTS: zookeeper:2181 启动kakfa集群12345678docker-compose up -d# 增加更多Broker：docker-compose scale kafka=3 # 合并：docker-compose up --scale kafka=3 读写验证12docker exec -it kafka_kafka_1 /bin/bash/opt/kafka/bin/kafka-topics.sh --create --zookeeper 172.18.0.4:2181 --replication-factor 1 --partitions 1 --topic my-test 查看刚创建的主题：12/opt/kafka/bin/kafka-topics.sh --list --zookeeper 172.18.0.4:2181 发送消息：1/opt/kafka/bin/kafka-console-producer.sh --broker-list 172.18.0.3:9092 --topic my-test 发送消息：1/opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server 172.18.0.3:9092 --topic my-test --from-beginning","categories":[],"tags":[]},{"title":"hexo 添加本地图片","slug":"hexo-添加本地图片","date":"2019-03-14T06:02:13.000Z","updated":"2019-03-14T06:13:59.128Z","comments":true,"path":"2019/03/14/hexo-添加本地图片/","link":"","permalink":"http://yoursite.com/2019/03/14/hexo-添加本地图片/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"docker 安装","slug":"hello-everyone","date":"2019-03-14T03:40:48.000Z","updated":"2019-03-14T05:51:32.087Z","comments":true,"path":"2019/03/14/hello-everyone/","link":"","permalink":"http://yoursite.com/2019/03/14/hello-everyone/","excerpt":"","text":"* 准备工作Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 1uname -r * 问题，卸载旧版本的包 区别？1yum erase docker-common-2:1.12.6-68.gitec8512b.el7.centos.x86_64 * 卸载旧版本12345678910yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine * 使用 yum 安装123yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 * 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。执行下面的命令添加 yum 软件源：123yum-config-manager \\ --add-repo \\ https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo * 官方源12yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo * 由于k8s的支持问题，我们选择，安装17.03.2.ce版本123456yum list docker-ce --showduplicates | sort -ryum makecache fastyum install -y --setopt=obsoletes=0 docker-ce-17.03.2.ce-1.el7.centos docker-ce-selinux-17.03.2.ce-1.el7.centos * 启动 Docker CE1systemctl enable docker &amp;&amp; systemctl start docker * 测试 Docker 是否安装正确1docker run hello-world Ubuntu 16.04+、Debian 8+、CentOS 7 加速123456vi /etc/docker/daemon.json&#123; &quot;registry-mirrors&quot;: [ &quot;https://registry.docker-cn.com&quot; ]&#125; 注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动。之后重新启动服务。1systemctl daemon-reload &amp;&amp; systemctl restart docker CentOS7查看和关闭防火墙12345firewall-cmd --statesystemctl stop firewalld.servicesystemctl disable firewalld.service","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-14T03:25:03.422Z","updated":"2019-03-14T03:25:03.422Z","comments":true,"path":"2019/03/14/hello-world/","link":"","permalink":"http://yoursite.com/2019/03/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}